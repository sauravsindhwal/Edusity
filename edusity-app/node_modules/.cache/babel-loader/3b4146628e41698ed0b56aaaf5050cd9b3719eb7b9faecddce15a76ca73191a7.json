{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\BasicLoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BasicLoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [allEntry, setAllEntry] = useState([]);\n  if (email && pasword) {\n    const submitForm = e => {\n      e.preventDefault();\n      const newEntry = {\n        email: email,\n        password: password\n      };\n      setAllEntry([...allEntry, newEntry]);\n      setEmail(''); // Reset email input after form submission\n      setPassword(''); // Reset password input after form submission\n    };\n  } else {\n    alert('fill all details');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), allEntry.map((curEle, Index) => {\n      const {\n        email,\n        password\n      } = curEle;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Password: \", password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, \"Index\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(BasicLoginForm, \"Hf7DJNcLIvncMlo9WMF7sU2/Axk=\");\n_c = BasicLoginForm;\nexport default BasicLoginForm;\nvar _c;\n$RefreshReg$(_c, \"BasicLoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BasicLoginForm","_s","email","setEmail","password","setPassword","allEntry","setAllEntry","pasword","submitForm","e","preventDefault","newEntry","alert","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","onChange","target","map","curEle","Index","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/BasicLoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BasicLoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [allEntry, setAllEntry] = useState([]);\r\n\r\n  if(email && pasword){\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const newEntry = { email: email, password: password };\r\n    setAllEntry([...allEntry, newEntry]);\r\n    setEmail(''); // Reset email input after form submission\r\n    setPassword(''); // Reset password input after form submission\r\n  };\r\n}else{\r\n  alert('fill all details');\r\n}\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitForm}>\r\n        <label htmlFor='email'>Email</label>\r\n        <input\r\n          type='text'\r\n          name='email'\r\n          id='email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        /><br />\r\n\r\n        <label htmlFor='password'>Password</label>\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          id='password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        {/* Move the submit button inside the form */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      {/* Display entered email and password entries */}\r\n      {allEntry.map((curEle, Index) => {\r\n        const {email, password} = curEle\r\n        return (\r\n          <div key=\"Index\">\r\n            <p>Email: {email}</p>\r\n            <p>Password: {password}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicLoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}