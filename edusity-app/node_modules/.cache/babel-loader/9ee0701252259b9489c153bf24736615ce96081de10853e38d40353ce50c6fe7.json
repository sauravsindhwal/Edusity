{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [num, setNum] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You choose \", num, \" number\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: num,\n      onChange: event => {\n        setNum(event.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"101\",\n        children: \"101\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"201\",\n        children: \"201\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"301\",\n        children: \"301\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"401\",\n        children: \"401\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"KVpZLO50MCB5Ir300+CdBIlhgfk=\");\n_c = App;\nexport default App;\nconst obj = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const EmplNum = [3, 6, 9, 12];\n    resolve(EmplNum);\n    reject(`data is not found`);\n  }, 2000);\n});\nconst fullData = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const userData = {\n      name: 'saurav',\n      salary: '1,75000'\n    };\n    resolve(`Emp name is ${userData.name}, salary is {userData.salary} & number is ${EmplNum[2]}`);\n  }, 2000);\n});\nconst getFullData = async () => {\n  const myData = await obj;\n  console.log(myData);\n  const myData2 = await fullData;\n  console.log(myData2);\n};\ngetFullData();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","num","setNum","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","event","target","_c","obj","Promise","resolve","reject","setTimeout","EmplNum","fullData","userData","name","salary","getFullData","myData","console","log","myData2","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n\r\n    const [num, setNum] = useState();\r\n    return (\r\n        <>\r\n            <h1>You choose {num} number</h1>\r\n            <select value={num} onChange={(event) => {\r\n                setNum(event.target.value);\r\n            }}>\r\n\r\n                <option value=\"101\">101</option>\r\n                <option value=\"201\">201</option>\r\n                <option value=\"301\">301</option>\r\n                <option value=\"401\">401</option>\r\n\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nconst obj = new Promise((resolve,reject) => {\r\n\r\nsetTimeout(() => {\r\n    const EmplNum = [3, 6, 9, 12]\r\nresolve (EmplNum)\r\nreject(`data is not found`)\r\n}, 2000);\r\n});\r\n\r\nconst fullData = new Promise((resolve,reject) => {\r\n\r\n    setTimeout(() => {\r\n        const userData = {\r\n            name: 'saurav',\r\n            salary: '1,75000'\r\n        }\r\n        resolve (`Emp name is ${userData.name}, salary is {userData.salary} & number is ${EmplNum[2]}`)\r\n    }, 2000);\r\n});\r\n\r\nconst getFullData = async () => {\r\n\r\n    const myData = await obj;\r\n    console.log(myData);\r\n\r\n    const myData2 = await fullData;\r\n    console.log(myData2);\r\n}\r\n\r\ngetFullData();"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAChC,oBACIE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA;MAAAO,QAAA,GAAI,aAAW,EAACF,GAAG,EAAC,SAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCX,OAAA;MAAQY,KAAK,EAAEP,GAAI;MAACQ,QAAQ,EAAGC,KAAK,IAAK;QACrCR,MAAM,CAACQ,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MAC9B,CAAE;MAAAL,QAAA,gBAEEP,OAAA;QAAQY,KAAK,EAAC,KAAK;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCX,OAAA;QAAQY,KAAK,EAAC,KAAK;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCX,OAAA;QAAQY,KAAK,EAAC,KAAK;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCX,OAAA;QAAQY,KAAK,EAAC,KAAK;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAAAP,EAAA,CAlBKD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAoBT,eAAeA,GAAG;AAElB,MAAMc,GAAG,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAK;EAE5CC,UAAU,CAAC,MAAM;IACb,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACjCH,OAAO,CAAEG,OAAO,CAAC;IACjBF,MAAM,CAAE,mBAAkB,CAAC;EAC3B,CAAC,EAAE,IAAI,CAAC;AACR,CAAC,CAAC;AAEF,MAAMG,QAAQ,GAAG,IAAIL,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAK;EAE7CC,UAAU,CAAC,MAAM;IACb,MAAMG,QAAQ,GAAG;MACbC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE;IACZ,CAAC;IACDP,OAAO,CAAG,eAAcK,QAAQ,CAACC,IAAK,6CAA4CH,OAAO,CAAC,CAAC,CAAE,EAAC,CAAC;EACnG,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC;AAEF,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;EAE5B,MAAMC,MAAM,GAAG,MAAMX,GAAG;EACxBY,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,MAAMG,OAAO,GAAG,MAAMR,QAAQ;EAC9BM,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;AACxB,CAAC;AAEDJ,WAAW,CAAC,CAAC;AAAC,IAAAX,EAAA;AAAAgB,YAAA,CAAAhB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}