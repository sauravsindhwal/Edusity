{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\ArrayMethod.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArrayMethod = () => {\n  const fruits = [{\n    id: 1,\n    name: 'apple',\n    calories: 40\n  }, {\n    id: 2,\n    name: 'mango',\n    calories: 50\n  }, {\n    id: 3,\n    name: 'banana',\n    calories: 80\n  }, {\n    id: 4,\n    name: 'pineapple',\n    calories: 70\n  }, {\n    id: 5,\n    name: 'orange',\n    calories: 60\n  }];\n  // fruits.sort((a, b) => a.name.localeCompare(b.name)); // SORT ALPHABETICAL\n  // fruits.sort((a, b) => b.name.localeCompare(a.name)); // REVERSE ALPHABETICAL\n\n  // fruits.sort((a, b) => a.calories - b.calories); // SORT BY CALORIES (NUMERIC)\n  // fruits.sort((a, b) => b.calories - a.calories); // REVERSE SORT BY CALORIES\n\n  // const lowCalFruits = fruits.filter(fruit => fruit.calories <= 50)\n  const highCalFruits = fruits.filter(fruit => fruit.calories >= 50);\n  const listItems = highCalFruits.map(highCalFruit => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [highCalFruit.name, \":\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: highCalFruit.calories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }, this)]\n  }, highCalFruit.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 53\n  }, this));\n  console.log(fruits);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n_c = ArrayMethod;\nexport default ArrayMethod;\nvar _c;\n$RefreshReg$(_c, \"ArrayMethod\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ArrayMethod","fruits","id","name","calories","highCalFruits","filter","fruit","listItems","map","highCalFruit","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/ArrayMethod.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst ArrayMethod = () => {\r\n\r\nconst fruits = [\r\n    {id: 1, name: 'apple', calories: 40},\r\n    {id: 2, name: 'mango', calories: 50},\r\n    { id: 3, name: 'banana', calories: 80},\r\n    { id: 4, name: 'pineapple', calories: 70},\r\n    { id: 5, name: 'orange', calories: 60}\r\n]\r\n// fruits.sort((a, b) => a.name.localeCompare(b.name)); // SORT ALPHABETICAL\r\n// fruits.sort((a, b) => b.name.localeCompare(a.name)); // REVERSE ALPHABETICAL\r\n\r\n// fruits.sort((a, b) => a.calories - b.calories); // SORT BY CALORIES (NUMERIC)\r\n// fruits.sort((a, b) => b.calories - a.calories); // REVERSE SORT BY CALORIES\r\n   \r\n// const lowCalFruits = fruits.filter(fruit => fruit.calories <= 50)\r\nconst highCalFruits = fruits.filter(fruit => fruit.calories >= 50)\r\n\r\nconst listItems = highCalFruits.map(highCalFruit => <li key={highCalFruit.id}>{highCalFruit.name}:&nbsp;\r\n                                    <b>{highCalFruit.calories}</b></li>);\r\n\r\nconsole.log(fruits)\r\n  return (\r\n    <>\r\n <ol>{listItems}</ol>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default ArrayMethod"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAE1B,MAAMC,MAAM,GAAG,CACX;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACpC;IAACF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACpC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACtC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAE,CAAC,CACzC;EACD;EACA;;EAEA;EACA;;EAEA;EACA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACH,QAAQ,IAAI,EAAE,CAAC;EAElE,MAAMI,SAAS,GAAGH,aAAa,CAACI,GAAG,CAACC,YAAY,iBAAIb,OAAA;IAAAc,QAAA,GAA2BD,YAAY,CAACP,IAAI,EAAC,OAC7D,eAAAN,OAAA;MAAAc,QAAA,EAAID,YAAY,CAACN;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,GADLL,YAAY,CAACR,EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC,CAAC;EAExEC,OAAO,CAACC,GAAG,CAAChB,MAAM,CAAC;EACjB,oBACEJ,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACHd,OAAA;MAAAc,QAAA,EAAKH;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACf,CAAC;AAGP,CAAC;AAAAG,EAAA,GA5BKlB,WAAW;AA8BjB,eAAeA,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}