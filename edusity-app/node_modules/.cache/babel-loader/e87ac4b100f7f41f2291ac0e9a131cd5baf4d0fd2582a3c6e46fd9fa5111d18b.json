{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.'];\n  const [inputMethod, setInputMethod] = useState(null);\n  const buttonClick = buttontext => {\n    console.log(buttontext);\n    if (buttontext === 'C') {\n      setInputMethod('');\n    } else if (buttontext === '=') {\n      const result = eval(inputMethod);\n      setInputMethod(result);\n    } else {\n      const newDisplayValue = inputMethod + buttontext;\n      setInputMethod(newDisplayValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calstyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputstyle\",\n        type: \"text\",\n        readOnly: true,\n        value: inputMethod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonstyle\",\n        children: numbers.map((allNumbers, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons\",\n            onClick: () => buttonClick(allNumbers),\n            children: allNumbers\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 6\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Calculator, \"5GoplmXQT1OExpSJZkt76IGQCfg=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Calculator","_s","numbers","inputMethod","setInputMethod","buttonClick","buttontext","console","log","result","eval","newDisplayValue","children","className","type","readOnly","value","fileName","_jsxFileName","lineNumber","columnNumber","map","allNumbers","index","onClick","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/Calculator.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Calculator = () => {\r\nconst numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.']\r\n  \r\nconst [inputMethod, setInputMethod] = useState(null);\r\n\r\nconst buttonClick = (buttontext) =>{\r\n    console.log(buttontext);\r\n    if(buttontext === 'C'){\r\n        setInputMethod('');\r\n    }else if(buttontext === '='){\r\nconst result = eval(inputMethod);\r\nsetInputMethod(result);\r\n    }\r\n    else{\r\n       const newDisplayValue = inputMethod + buttontext;\r\n       setInputMethod(newDisplayValue)\r\n\r\n    }\r\n}\r\nreturn (\r\n    <>\r\n   <div className=\"calstyle\">\r\n    <input className=\"inputstyle\" type='text' readOnly value={inputMethod}/>\r\n    <div className=\"buttonstyle\">\r\n    {\r\n        numbers.map((allNumbers, index)=>{\r\n            return(    \r\n                \r\n     <button key = {index} className=\"buttons\" onClick={() => buttonClick(allNumbers)}>{allNumbers}</button>\r\n     \r\n    )\r\n        })\r\n    }\r\n    </div>\r\n   \r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Calculator"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAErG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMU,WAAW,GAAIC,UAAU,IAAI;IAC/BC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB,IAAGA,UAAU,KAAK,GAAG,EAAC;MAClBF,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC,MAAK,IAAGE,UAAU,KAAK,GAAG,EAAC;MAChC,MAAMG,MAAM,GAAGC,IAAI,CAACP,WAAW,CAAC;MAChCC,cAAc,CAACK,MAAM,CAAC;IAClB,CAAC,MACG;MACD,MAAME,eAAe,GAAGR,WAAW,GAAGG,UAAU;MAChDF,cAAc,CAACO,eAAe,CAAC;IAElC;EACJ,CAAC;EACD,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACDf,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBf,OAAA;QAAOgB,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ;QAACC,KAAK,EAAEb;MAAY;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxEvB,OAAA;QAAKgB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAExBV,OAAO,CAACmB,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAG;UAC7B,oBAEP1B,OAAA;YAAsBgB,SAAS,EAAC,SAAS;YAACW,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACiB,UAAU,CAAE;YAAAV,QAAA,EAAEU;UAAU,GAA9EC,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkF,CAAC;QAGpG,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC,gBACH,CAAC;AAEP,CAAC;AAAAnB,EAAA,CAtCKD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAwChB,eAAeA,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}