{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\Greeting.jsx\";\nimport React from 'react';\n//we've to create greeting formats\n//if time is between 1Am to 12pm say goodmorning\n//if time is between 12pm to 7pm say good afternoon\n//if time is between 7pm to 1am say good night\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst currDate = new Date();\ncurrDate = currDate.getHours();\nlet greet = \"\";\nif (currDate >= 1 && currDate < 12) {\n  greet = \"Good Morning\";\n} else if (currDate >= 12 && currDate < 19) {\n  greet = \"Good Evening\";\n} else {\n  greet = \"Good Night\";\n}\nconst Greeting = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello Sir, \", greet]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Greeting;\nexport default Greeting;\nvar _c;\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","currDate","Date","getHours","greet","Greeting","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/Greeting.jsx"],"sourcesContent":["import React from 'react';\r\n//we've to create greeting formats\r\n//if time is between 1Am to 12pm say goodmorning\r\n//if time is between 12pm to 7pm say good afternoon\r\n//if time is between 7pm to 1am say good night\r\n\r\nconst currDate= new Date();\r\ncurrDate= currDate.getHours();\r\nlet greet=\"\";\r\n\r\nif(currDate>=1 && currDate<12){\r\n    greet= \"Good Morning\"\r\n    }else if(currDate>=12 && currDate<19){\r\n    greet= \"Good Evening\"\r\n    }else{\r\n    greet = \"Good Night\"\r\n    }\r\n    \r\nconst Greeting = () => {\r\n\r\n  return (\r\n    <>\r\n    <h1>Hello Sir, {greet}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Greeting"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAE,IAAIC,IAAI,CAAC,CAAC;AAC1BD,QAAQ,GAAEA,QAAQ,CAACE,QAAQ,CAAC,CAAC;AAC7B,IAAIC,KAAK,GAAC,EAAE;AAEZ,IAAGH,QAAQ,IAAE,CAAC,IAAIA,QAAQ,GAAC,EAAE,EAAC;EAC1BG,KAAK,GAAE,cAAc;AACrB,CAAC,MAAK,IAAGH,QAAQ,IAAE,EAAE,IAAIA,QAAQ,GAAC,EAAE,EAAC;EACrCG,KAAK,GAAE,cAAc;AACrB,CAAC,MAAI;EACLA,KAAK,GAAG,YAAY;AACpB;AAEJ,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAErB,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA;MAAAQ,QAAA,GAAI,aAAW,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACzB,CAAC;AAEP,CAAC;AAAAC,EAAA,GAPKN,QAAQ;AASd,eAAeA,QAAQ;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}