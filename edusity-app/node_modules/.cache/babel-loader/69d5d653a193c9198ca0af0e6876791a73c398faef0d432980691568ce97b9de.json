{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from './InputRRR';\nimport ButtonRRR from './ButtonRRR';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.'];\n  const [inputnum, setInputNum] = useState('');\n  const onButtonClick = buttontext => {\n    if (buttontext === \"C\") {\n      const result1 = '';\n      setInputNum(result1);\n    } else if (buttontext === '=') {\n      const result2 = eval(inputnum);\n      setInputNum(result2);\n    } else {\n      const newDisplayShow = inputnum + buttontext;\n      setInputNum(newDisplayShow);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calstyle\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      inputnum: inputnum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ButtonRRR, {\n      numbers: numbers,\n      buttonclick: onButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"pxtZgepG3Yrzvp1KF8fWv5j0amg=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","Input","ButtonRRR","jsxDEV","_jsxDEV","Calculator","_s","numbers","inputnum","setInputNum","onButtonClick","buttontext","result1","result2","eval","newDisplayShow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonclick","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/Calculator.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport Input from './InputRRR'\r\nimport ButtonRRR from './ButtonRRR'\r\nconst Calculator = () => {\r\n\r\nconst numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.']\r\n\r\nconst [inputnum, setInputNum] = useState('');\r\nconst onButtonClick = (buttontext) => {\r\nif(buttontext === \"C\"){\r\nconst result1 = '';\r\nsetInputNum(result1);\r\n} else if(buttontext === '='){\r\nconst result2 = eval(inputnum);\r\nsetInputNum(result2);\r\n\r\n}else {\r\n    const newDisplayShow = inputnum + buttontext\r\n    setInputNum(newDisplayShow);\r\n}\r\n\r\n}\r\n  return (\r\n  \r\n    <div className=\"calstyle\">\r\n\r\n    <Input inputnum= {inputnum}/>\r\n\r\n\r\n    <ButtonRRR numbers= {numbers} buttonclick={onButtonClick}/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Calculator"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAErG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,aAAa,GAAIC,UAAU,IAAK;IACtC,IAAGA,UAAU,KAAK,GAAG,EAAC;MACtB,MAAMC,OAAO,GAAG,EAAE;MAClBH,WAAW,CAACG,OAAO,CAAC;IACpB,CAAC,MAAM,IAAGD,UAAU,KAAK,GAAG,EAAC;MAC7B,MAAME,OAAO,GAAGC,IAAI,CAACN,QAAQ,CAAC;MAC9BC,WAAW,CAACI,OAAO,CAAC;IAEpB,CAAC,MAAK;MACF,MAAME,cAAc,GAAGP,QAAQ,GAAGG,UAAU;MAC5CF,WAAW,CAACM,cAAc,CAAC;IAC/B;EAEA,CAAC;EACC,oBAEEX,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEzBb,OAAA,CAACH,KAAK;MAACO,QAAQ,EAAGA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAG7BjB,OAAA,CAACF,SAAS;MAACK,OAAO,EAAGA,OAAQ;MAACe,WAAW,EAAEZ;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAGV,CAAC;AAAAf,EAAA,CA9BKD,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAgChB,eAAeA,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}