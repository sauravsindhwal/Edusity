{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.'];\n  const [inputMethod, setInputMethod] = useState(false);\n  const inputChange = e => {\n    e.target.value;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calstyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputstyle\",\n        type: \"text\",\n        readOnly: true,\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonstyle\",\n        children: numbers.map(allNumbers => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons\",\n            children: allNumbers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 6\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Calculator, \"CrY5EIqQCkhZ8XCcS/OskeT9q3I=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Calculator","_s","numbers","inputMethod","setInputMethod","inputChange","e","target","value","children","className","type","readOnly","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","allNumbers","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/Calculator.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Calculator = () => {\r\nconst numbers = ['C', '1', '2', '+', '3', '4', '-', '5', '6', '*', '7', '8', '/', '=', '9', '0', '.']\r\n  \r\nconst [inputMethod, setInputMethod] = useState(false);\r\nconst inputChange = (e) => {\r\n    e.target.value;\r\n}\r\nreturn (\r\n    <>\r\n   <div className=\"calstyle\">\r\n    <input className=\"inputstyle\" type='text' readOnly onChange={inputChange}/>\r\n    <div className=\"buttonstyle\">\r\n    {\r\n        numbers.map((allNumbers)=>{\r\n            return(    \r\n                \r\n     <button className=\"buttons\">{allNumbers}</button>\r\n     \r\n    )\r\n        })\r\n    }\r\n    </div>\r\n   \r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Calculator"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAErG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,MAAM,CAACC,KAAK;EAClB,CAAC;EACD,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACDZ,OAAA;MAAKa,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBZ,OAAA;QAAOa,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ;QAACC,QAAQ,EAAER;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3EpB,OAAA;QAAKa,SAAS,EAAC,aAAa;QAAAD,QAAA,EAExBP,OAAO,CAACgB,GAAG,CAAEC,UAAU,IAAG;UACtB,oBAEPtB,OAAA;YAAQa,SAAS,EAAC,SAAS;YAAAD,QAAA,EAAEU;UAAU;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAG9C,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC,gBACH,CAAC;AAEP,CAAC;AAAAhB,EAAA,CA1BKD,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA4BhB,eAAeA,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}