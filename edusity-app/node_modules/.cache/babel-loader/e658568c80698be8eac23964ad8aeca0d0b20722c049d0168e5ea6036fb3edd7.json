{"ast":null,"code":"var _jsxFileName = \"D:\\\\Saurav\\\\Learn React\\\\learn-react\\\\src\\\\UserGreetings.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst color1 = {\n  fontSize: \"2.5em\",\n  backgroundColor: \"hsl(120, 100%, 42%)\",\n  color: \"white\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  margin: \"0\"\n};\nconst color2 = {\n  fontSize: \"2.5em\",\n  backgroundColor: \"hsl(0, 100%, 42%)\",\n  color: \"white\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  margin: \"0\"\n};\nconst user1 = /*#__PURE__*/_jsxDEV(\"p\", {\n  style: color1,\n  children: [\"Welcome \", props.username, \"  \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 15\n}, this);\nconst user2 = /*#__PURE__*/_jsxDEV(\"p\", {\n  style: color2,\n  children: \"please login first...\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 15\n}, this);\nconst UserGreetings = props => {\n  /* if(props.isLoggedIn){\r\n        return <p style={color1}>Welcome {props.username}</p>\r\n      \r\n       }else{\r\n          return <p style={color2}>please login first...</p>\r\n          \r\n       } */\n\n  /*  return(\r\n  props.isLoggedIn ?   <p style={color1}>Welcome {props.username}  </p> : \r\n                      <p style={color2}>please login first...</p>\r\n   ) */\n\n  return props.isLoggedIn ? {\n    user1\n  } : {\n    user2\n  };\n};\n_c = UserGreetings;\nexport default UserGreetings;\nvar _c;\n$RefreshReg$(_c, \"UserGreetings\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","color1","fontSize","backgroundColor","color","padding","borderRadius","margin","color2","user1","style","children","props","username","fileName","_jsxFileName","lineNumber","columnNumber","user2","UserGreetings","isLoggedIn","_c","$RefreshReg$"],"sources":["D:/Saurav/Learn React/learn-react/src/UserGreetings.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst color1={\r\n    fontSize: \"2.5em\",\r\n    backgroundColor: \"hsl(120, 100%, 42%)\",\r\n    color: \"white\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n    margin: \"0\",\r\n}\r\n\r\n\r\nconst color2={\r\n    fontSize: \"2.5em\",\r\n    backgroundColor: \"hsl(0, 100%, 42%)\",   \r\n    color: \"white\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n    margin: \"0\",\r\n}\r\n\r\nconst user1 = <p style={color1}>Welcome {props.username}  </p> \r\n\r\nconst user2 = <p style={color2}>please login first...</p>\r\n\r\nconst UserGreetings = (props) => {\r\n    /* if(props.isLoggedIn){\r\n\r\n        return <p style={color1}>Welcome {props.username}</p>\r\n        \r\n         }else{\r\n            return <p style={color2}>please login first...</p>\r\n            \r\n         } */\r\n\r\n       /*  return(\r\n      props.isLoggedIn ?   <p style={color1}>Welcome {props.username}  </p> : \r\n                           <p style={color2}>please login first...</p>\r\n        ) */\r\n\r\n        return(\r\n       props.isLoggedIn ? {user1} : {user2}\r\n        )\r\n}\r\n\r\nexport default UserGreetings"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAC;EACTC,QAAQ,EAAE,OAAO;EACjBC,eAAe,EAAE,qBAAqB;EACtCC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE;AACZ,CAAC;AAGD,MAAMC,MAAM,GAAC;EACTN,QAAQ,EAAE,OAAO;EACjBC,eAAe,EAAE,mBAAmB;EACpCC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE;AACZ,CAAC;AAED,MAAME,KAAK,gBAAGT,OAAA;EAAGU,KAAK,EAAET,MAAO;EAAAU,QAAA,GAAC,UAAQ,EAACC,KAAK,CAACC,QAAQ,EAAC,IAAE;AAAA;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC;AAE9D,MAAMC,KAAK,gBAAGlB,OAAA;EAAGU,KAAK,EAAEF,MAAO;EAAAG,QAAA,EAAC;AAAqB;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC;AAEzD,MAAME,aAAa,GAAIP,KAAK,IAAK;EAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;;EAGO;AACP;AACA;AACA;;EAEQ,OACDA,KAAK,CAACQ,UAAU,GAAG;IAACX;EAAK,CAAC,GAAG;IAACS;EAAK,CAAC;AAE3C,CAAC;AAAAG,EAAA,GAlBKF,aAAa;AAoBnB,eAAeA,aAAa;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}